spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        #      show_sql: true
        format_sql: true
  redis:
    pool:
      min-idle: 0
      max-idle: 8
      max-active: 8
    port: 6379
    host: redis
#    host: 127.0.0.1

  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: http://3.36.169.209:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - account_email

  mail:
    host: smtp.gmail.com
    port: 587
    username: wlgusqor12@gmail.com
    password: tbyiilhblgupacvg
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.type: trace
  org.springframework.mail: DEBUG
  com.sun.mail.smtp: DEBUG


cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESSKEY}
      secretKey: ${AWS_SECRETKEY}
    s3:
      bucket: ${AWS_BUCKET}
    region:
      static: ap-northeast-2
    stack:
      auto: 'false'

jwt:
  secret-key: ${JWT_SECRET_KEY}


